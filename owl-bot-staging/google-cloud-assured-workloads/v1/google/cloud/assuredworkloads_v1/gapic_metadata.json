 {
  "comment": "This file maps proto services/RPCs to the corresponding library clients/methods",
  "language": "python",
  "libraryPackage": "google.cloud.assuredworkloads_v1",
  "protoPackage": "google.cloud.assuredworkloads.v1",
  "schema": "1.0",
  "services": {
    "AssuredWorkloadsService": {
      "clients": {
        "grpc": {
          "libraryClient": "AssuredWorkloadsServiceClient",
          "rpcs": {
            "AcknowledgeViolation": {
              "methods": [
                "acknowledge_violation"
              ]
            },
            "CreateWorkload": {
              "methods": [
                "create_workload"
              ]
            },
            "DeleteWorkload": {
              "methods": [
                "delete_workload"
              ]
            },
            "GetViolation": {
              "methods": [
                "get_violation"
              ]
            },
            "GetWorkload": {
              "methods": [
                "get_workload"
              ]
            },
            "ListViolations": {
              "methods": [
                "list_violations"
              ]
            },
            "ListWorkloads": {
              "methods": [
                "list_workloads"
              ]
            },
            "RestrictAllowedResources": {
              "methods": [
                "restrict_allowed_resources"
              ]
            },
            "UpdateWorkload": {
              "methods": [
                "update_workload"
              ]
            }
          }
        },
        "grpc-async": {
          "libraryClient": "AssuredWorkloadsServiceAsyncClient",
          "rpcs": {
            "AcknowledgeViolation": {
              "methods": [
                "acknowledge_violation"
              ]
            },
            "CreateWorkload": {
              "methods": [
                "create_workload"
              ]
            },
            "DeleteWorkload": {
              "methods": [
                "delete_workload"
              ]
            },
            "GetViolation": {
              "methods": [
                "get_violation"
              ]
            },
            "GetWorkload": {
              "methods": [
                "get_workload"
              ]
            },
            "ListViolations": {
              "methods": [
                "list_violations"
              ]
            },
            "ListWorkloads": {
              "methods": [
                "list_workloads"
              ]
            },
            "RestrictAllowedResources": {
              "methods": [
                "restrict_allowed_resources"
              ]
            },
            "UpdateWorkload": {
              "methods": [
                "update_workload"
              ]
            }
          }
        },
        "rest": {
          "libraryClient": "AssuredWorkloadsServiceClient",
          "rpcs": {
            "AcknowledgeViolation": {
              "methods": [
                "acknowledge_violation"
              ]
            },
            "CreateWorkload": {
              "methods": [
                "create_workload"
              ]
            },
            "DeleteWorkload": {
              "methods": [
                "delete_workload"
              ]
            },
            "GetViolation": {
              "methods": [
                "get_violation"
              ]
            },
            "GetWorkload": {
              "methods": [
                "get_workload"
              ]
            },
            "ListViolations": {
              "methods": [
                "list_violations"
              ]
            },
            "ListWorkloads": {
              "methods": [
                "list_workloads"
              ]
            },
            "RestrictAllowedResources": {
              "methods": [
                "restrict_allowed_resources"
              ]
            },
            "UpdateWorkload": {
              "methods": [
                "update_workload"
              ]
            }
          }
        }
      }
    }
  }
}
