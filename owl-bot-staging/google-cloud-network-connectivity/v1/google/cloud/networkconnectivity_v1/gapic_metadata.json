 {
  "comment": "This file maps proto services/RPCs to the corresponding library clients/methods",
  "language": "python",
  "libraryPackage": "google.cloud.networkconnectivity_v1",
  "protoPackage": "google.cloud.networkconnectivity.v1",
  "schema": "1.0",
  "services": {
    "HubService": {
      "clients": {
        "grpc": {
          "libraryClient": "HubServiceClient",
          "rpcs": {
            "AcceptHubSpoke": {
              "methods": [
                "accept_hub_spoke"
              ]
            },
            "CreateHub": {
              "methods": [
                "create_hub"
              ]
            },
            "CreateSpoke": {
              "methods": [
                "create_spoke"
              ]
            },
            "DeleteHub": {
              "methods": [
                "delete_hub"
              ]
            },
            "DeleteSpoke": {
              "methods": [
                "delete_spoke"
              ]
            },
            "GetGroup": {
              "methods": [
                "get_group"
              ]
            },
            "GetHub": {
              "methods": [
                "get_hub"
              ]
            },
            "GetRoute": {
              "methods": [
                "get_route"
              ]
            },
            "GetRouteTable": {
              "methods": [
                "get_route_table"
              ]
            },
            "GetSpoke": {
              "methods": [
                "get_spoke"
              ]
            },
            "ListGroups": {
              "methods": [
                "list_groups"
              ]
            },
            "ListHubSpokes": {
              "methods": [
                "list_hub_spokes"
              ]
            },
            "ListHubs": {
              "methods": [
                "list_hubs"
              ]
            },
            "ListRouteTables": {
              "methods": [
                "list_route_tables"
              ]
            },
            "ListRoutes": {
              "methods": [
                "list_routes"
              ]
            },
            "ListSpokes": {
              "methods": [
                "list_spokes"
              ]
            },
            "RejectHubSpoke": {
              "methods": [
                "reject_hub_spoke"
              ]
            },
            "UpdateHub": {
              "methods": [
                "update_hub"
              ]
            },
            "UpdateSpoke": {
              "methods": [
                "update_spoke"
              ]
            }
          }
        },
        "grpc-async": {
          "libraryClient": "HubServiceAsyncClient",
          "rpcs": {
            "AcceptHubSpoke": {
              "methods": [
                "accept_hub_spoke"
              ]
            },
            "CreateHub": {
              "methods": [
                "create_hub"
              ]
            },
            "CreateSpoke": {
              "methods": [
                "create_spoke"
              ]
            },
            "DeleteHub": {
              "methods": [
                "delete_hub"
              ]
            },
            "DeleteSpoke": {
              "methods": [
                "delete_spoke"
              ]
            },
            "GetGroup": {
              "methods": [
                "get_group"
              ]
            },
            "GetHub": {
              "methods": [
                "get_hub"
              ]
            },
            "GetRoute": {
              "methods": [
                "get_route"
              ]
            },
            "GetRouteTable": {
              "methods": [
                "get_route_table"
              ]
            },
            "GetSpoke": {
              "methods": [
                "get_spoke"
              ]
            },
            "ListGroups": {
              "methods": [
                "list_groups"
              ]
            },
            "ListHubSpokes": {
              "methods": [
                "list_hub_spokes"
              ]
            },
            "ListHubs": {
              "methods": [
                "list_hubs"
              ]
            },
            "ListRouteTables": {
              "methods": [
                "list_route_tables"
              ]
            },
            "ListRoutes": {
              "methods": [
                "list_routes"
              ]
            },
            "ListSpokes": {
              "methods": [
                "list_spokes"
              ]
            },
            "RejectHubSpoke": {
              "methods": [
                "reject_hub_spoke"
              ]
            },
            "UpdateHub": {
              "methods": [
                "update_hub"
              ]
            },
            "UpdateSpoke": {
              "methods": [
                "update_spoke"
              ]
            }
          }
        }
      }
    },
    "PolicyBasedRoutingService": {
      "clients": {
        "grpc": {
          "libraryClient": "PolicyBasedRoutingServiceClient",
          "rpcs": {
            "CreatePolicyBasedRoute": {
              "methods": [
                "create_policy_based_route"
              ]
            },
            "DeletePolicyBasedRoute": {
              "methods": [
                "delete_policy_based_route"
              ]
            },
            "GetPolicyBasedRoute": {
              "methods": [
                "get_policy_based_route"
              ]
            },
            "ListPolicyBasedRoutes": {
              "methods": [
                "list_policy_based_routes"
              ]
            }
          }
        },
        "grpc-async": {
          "libraryClient": "PolicyBasedRoutingServiceAsyncClient",
          "rpcs": {
            "CreatePolicyBasedRoute": {
              "methods": [
                "create_policy_based_route"
              ]
            },
            "DeletePolicyBasedRoute": {
              "methods": [
                "delete_policy_based_route"
              ]
            },
            "GetPolicyBasedRoute": {
              "methods": [
                "get_policy_based_route"
              ]
            },
            "ListPolicyBasedRoutes": {
              "methods": [
                "list_policy_based_routes"
              ]
            }
          }
        }
      }
    }
  }
}
