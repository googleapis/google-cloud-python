# Format: //devtools/kokoro/config/proto/build.proto

# Build logs will be here
action {
  define_artifacts {
    regex: "**/*sponge_log.xml"
  }
}

# Download trampoline resources.
gfile_resources: "/bigstore/cloud-devrel-kokoro-resources/trampoline"

# Use the trampoline script to run in docker.
build_file: "python-bigquery-pandas/.kokoro/trampoline_v2.sh"

# Configure the docker image for kokoro-trampoline.
env_vars: {
    key: "TRAMPOLINE_IMAGE"
    value: "gcr.io/cloud-devrel-kokoro-resources/python-lib-docs"
}
env_vars: {
    key: "TRAMPOLINE_BUILD_FILE"
    value: "github/python-bigquery-pandas/.kokoro/publish-docs.sh"
}

env_vars: {
    key: "STAGING_BUCKET"
    value: "docs-staging"
}

env_vars: {
    key: "V2_STAGING_BUCKET"
    # Push non-cloud library docs to `docs-staging-v2-staging` instead of the
    # Cloud RAD bucket `docs-staging-v2`
    value: "docs-staging-v2-staging"
}

# It will upload the docker image after successful builds.
env_vars: {
    key: "TRAMPOLINE_IMAGE_UPLOAD"
    value: "true"
}

# It will always build the docker image.
env_vars: {
    key: "TRAMPOLINE_DOCKERFILE"
    value: ".kokoro/docker/docs/Dockerfile"
}

# Fetch the token needed for reporting release status to GitHub
before_action {
  fetch_keystore {
    keystore_resource {
      keystore_config_id: 73713
      keyname: "yoshi-automation-github-key"
    }
  }
}

before_action {
  fetch_keystore {
    keystore_resource {
      keystore_config_id: 73713
      keyname: "docuploader_service_account"
    }
  }
}