language: python

matrix:
  include:
  - os: linux
    python: 2.7
    env: PYTHON=2.7 PANDAS=0.19.2 COVERAGE='false' LINT='false'
  - os: linux
    python: 3.5
    env: PYTHON=3.5 PANDAS=0.18.1 COVERAGE='true' LINT='false'
  # https://github.com/pydata/pandas-gbq/issues/189
  # - os: linux
  #   python: 3.6
  #   env: PYTHON=3.6 PANDAS=0.20.1 COVERAGE='false' LINT='false'
  - os: linux
    python: 3.6
    env: PYTHON=3.6 PANDAS=MASTER COVERAGE='false' LINT='true'
env:

before_install:
  - echo "before_install"
  - source ci/travis_process_gbq_encryption.sh

install:
  # Upgrade setuptools and pip to work around
  # https://github.com/pypa/setuptools/issues/885
  - pip install --upgrade setuptools
  - pip install --upgrade pip
  - REQ="ci/requirements-${PYTHON}-${PANDAS}" ;
    if [ -f "$REQ.pip" ]; then
      pip install --upgrade nox ;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda ;
      export PATH="$HOME/miniconda/bin:$PATH" ;
      hash -r ;
      conda config --set always_yes yes --set changeps1 no ;
      conda config --add channels pandas ;
      conda config --add channels conda-forge ;
      conda update -q conda ;
      conda info -a ;
      conda create -q -n test-environment python=$PYTHON ;
      source activate test-environment ;
      conda install -q setuptools ;
      conda install -q pandas=$PANDAS;
      conda install -q --file "$REQ.conda";
      conda list ;
      python setup.py install ;
    fi

script:
  - if [[ $PYTHON == '2.7' ]]; then
      pip install -r ci/requirements-2.7-0.19.2.pip ;
      pip install -e . ;
      pytest tests/unit ;
    fi
  - if [[ $PYTHON == '3.5' ]]; then nox -s test_earliest_deps ; fi
  - if [[ $PYTHON == '3.6' ]] && [[ "$PANDAS" == "MASTER" ]]; then nox -s test_latest_deps ; fi
  - REQ="ci/requirements-${PYTHON}-${PANDAS}" ;
    if [ -f "$REQ.conda" ]; then
      pytest --quiet -m 'not local_auth' -v tests ;
    fi
  - if [[ $COVERAGE == 'true' ]]; then nox -s cover ; fi
  - if [[ $LINT == 'true' ]]; then nox -s lint ; fi
