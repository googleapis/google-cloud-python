{
  "clientLibrary": {
    "apis": [
      {
        "id": "google.cloud.managedkafka.v1",
        "version": "v1"
      }
    ],
    "language": "PYTHON",
    "name": "google-cloud-managedkafka",
    "version": "0.1.0"
  },
  "snippets": [
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.create_cluster",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.CreateCluster",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "CreateCluster"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.CreateClusterRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "cluster",
            "type": "google.cloud.managedkafka_v1.types.Cluster"
          },
          {
            "name": "cluster_id",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.api_core.operation_async.AsyncOperation",
        "shortName": "create_cluster"
      },
      "description": "Sample for CreateCluster",
      "file": "managedkafka_v1_generated_managed_kafka_create_cluster_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_CreateCluster_async",
      "segments": [
        {
          "end": 62,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 62,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 52,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 59,
          "start": 53,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 63,
          "start": 60,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_create_cluster_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.create_cluster",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.CreateCluster",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "CreateCluster"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.CreateClusterRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "cluster",
            "type": "google.cloud.managedkafka_v1.types.Cluster"
          },
          {
            "name": "cluster_id",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.api_core.operation.Operation",
        "shortName": "create_cluster"
      },
      "description": "Sample for CreateCluster",
      "file": "managedkafka_v1_generated_managed_kafka_create_cluster_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_CreateCluster_sync",
      "segments": [
        {
          "end": 62,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 62,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 52,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 59,
          "start": 53,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 63,
          "start": 60,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_create_cluster_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.create_topic",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.CreateTopic",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "CreateTopic"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.CreateTopicRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "topic",
            "type": "google.cloud.managedkafka_v1.types.Topic"
          },
          {
            "name": "topic_id",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.types.Topic",
        "shortName": "create_topic"
      },
      "description": "Sample for CreateTopic",
      "file": "managedkafka_v1_generated_managed_kafka_create_topic_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_CreateTopic_async",
      "segments": [
        {
          "end": 57,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 57,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 51,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 54,
          "start": 52,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 58,
          "start": 55,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_create_topic_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.create_topic",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.CreateTopic",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "CreateTopic"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.CreateTopicRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "topic",
            "type": "google.cloud.managedkafka_v1.types.Topic"
          },
          {
            "name": "topic_id",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.types.Topic",
        "shortName": "create_topic"
      },
      "description": "Sample for CreateTopic",
      "file": "managedkafka_v1_generated_managed_kafka_create_topic_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_CreateTopic_sync",
      "segments": [
        {
          "end": 57,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 57,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 51,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 54,
          "start": 52,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 58,
          "start": 55,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_create_topic_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.delete_cluster",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.DeleteCluster",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "DeleteCluster"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.DeleteClusterRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.api_core.operation_async.AsyncOperation",
        "shortName": "delete_cluster"
      },
      "description": "Sample for DeleteCluster",
      "file": "managedkafka_v1_generated_managed_kafka_delete_cluster_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_DeleteCluster_async",
      "segments": [
        {
          "end": 55,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 55,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 52,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 56,
          "start": 53,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_delete_cluster_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.delete_cluster",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.DeleteCluster",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "DeleteCluster"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.DeleteClusterRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.api_core.operation.Operation",
        "shortName": "delete_cluster"
      },
      "description": "Sample for DeleteCluster",
      "file": "managedkafka_v1_generated_managed_kafka_delete_cluster_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_DeleteCluster_sync",
      "segments": [
        {
          "end": 55,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 55,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 52,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 56,
          "start": 53,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_delete_cluster_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.delete_consumer_group",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.DeleteConsumerGroup",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "DeleteConsumerGroup"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.DeleteConsumerGroupRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "shortName": "delete_consumer_group"
      },
      "description": "Sample for DeleteConsumerGroup",
      "file": "managedkafka_v1_generated_managed_kafka_delete_consumer_group_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_DeleteConsumerGroup_async",
      "segments": [
        {
          "end": 49,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 49,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 50,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_delete_consumer_group_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.delete_consumer_group",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.DeleteConsumerGroup",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "DeleteConsumerGroup"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.DeleteConsumerGroupRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "shortName": "delete_consumer_group"
      },
      "description": "Sample for DeleteConsumerGroup",
      "file": "managedkafka_v1_generated_managed_kafka_delete_consumer_group_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_DeleteConsumerGroup_sync",
      "segments": [
        {
          "end": 49,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 49,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 50,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_delete_consumer_group_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.delete_topic",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.DeleteTopic",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "DeleteTopic"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.DeleteTopicRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "shortName": "delete_topic"
      },
      "description": "Sample for DeleteTopic",
      "file": "managedkafka_v1_generated_managed_kafka_delete_topic_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_DeleteTopic_async",
      "segments": [
        {
          "end": 49,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 49,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 50,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_delete_topic_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.delete_topic",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.DeleteTopic",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "DeleteTopic"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.DeleteTopicRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "shortName": "delete_topic"
      },
      "description": "Sample for DeleteTopic",
      "file": "managedkafka_v1_generated_managed_kafka_delete_topic_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_DeleteTopic_sync",
      "segments": [
        {
          "end": 49,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 49,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 50,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_delete_topic_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.get_cluster",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.GetCluster",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "GetCluster"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.GetClusterRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.types.Cluster",
        "shortName": "get_cluster"
      },
      "description": "Sample for GetCluster",
      "file": "managedkafka_v1_generated_managed_kafka_get_cluster_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_GetCluster_async",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_get_cluster_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.get_cluster",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.GetCluster",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "GetCluster"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.GetClusterRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.types.Cluster",
        "shortName": "get_cluster"
      },
      "description": "Sample for GetCluster",
      "file": "managedkafka_v1_generated_managed_kafka_get_cluster_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_GetCluster_sync",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_get_cluster_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.get_consumer_group",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.GetConsumerGroup",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "GetConsumerGroup"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.GetConsumerGroupRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.types.ConsumerGroup",
        "shortName": "get_consumer_group"
      },
      "description": "Sample for GetConsumerGroup",
      "file": "managedkafka_v1_generated_managed_kafka_get_consumer_group_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_GetConsumerGroup_async",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_get_consumer_group_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.get_consumer_group",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.GetConsumerGroup",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "GetConsumerGroup"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.GetConsumerGroupRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.types.ConsumerGroup",
        "shortName": "get_consumer_group"
      },
      "description": "Sample for GetConsumerGroup",
      "file": "managedkafka_v1_generated_managed_kafka_get_consumer_group_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_GetConsumerGroup_sync",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_get_consumer_group_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.get_topic",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.GetTopic",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "GetTopic"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.GetTopicRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.types.Topic",
        "shortName": "get_topic"
      },
      "description": "Sample for GetTopic",
      "file": "managedkafka_v1_generated_managed_kafka_get_topic_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_GetTopic_async",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_get_topic_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.get_topic",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.GetTopic",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "GetTopic"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.GetTopicRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.types.Topic",
        "shortName": "get_topic"
      },
      "description": "Sample for GetTopic",
      "file": "managedkafka_v1_generated_managed_kafka_get_topic_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_GetTopic_sync",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_get_topic_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.list_clusters",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.ListClusters",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "ListClusters"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.ListClustersRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.services.managed_kafka.pagers.ListClustersAsyncPager",
        "shortName": "list_clusters"
      },
      "description": "Sample for ListClusters",
      "file": "managedkafka_v1_generated_managed_kafka_list_clusters_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_ListClusters_async",
      "segments": [
        {
          "end": 52,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 52,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 53,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_list_clusters_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.list_clusters",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.ListClusters",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "ListClusters"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.ListClustersRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.services.managed_kafka.pagers.ListClustersPager",
        "shortName": "list_clusters"
      },
      "description": "Sample for ListClusters",
      "file": "managedkafka_v1_generated_managed_kafka_list_clusters_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_ListClusters_sync",
      "segments": [
        {
          "end": 52,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 52,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 53,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_list_clusters_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.list_consumer_groups",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.ListConsumerGroups",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "ListConsumerGroups"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.ListConsumerGroupsRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.services.managed_kafka.pagers.ListConsumerGroupsAsyncPager",
        "shortName": "list_consumer_groups"
      },
      "description": "Sample for ListConsumerGroups",
      "file": "managedkafka_v1_generated_managed_kafka_list_consumer_groups_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_ListConsumerGroups_async",
      "segments": [
        {
          "end": 52,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 52,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 53,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_list_consumer_groups_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.list_consumer_groups",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.ListConsumerGroups",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "ListConsumerGroups"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.ListConsumerGroupsRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.services.managed_kafka.pagers.ListConsumerGroupsPager",
        "shortName": "list_consumer_groups"
      },
      "description": "Sample for ListConsumerGroups",
      "file": "managedkafka_v1_generated_managed_kafka_list_consumer_groups_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_ListConsumerGroups_sync",
      "segments": [
        {
          "end": 52,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 52,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 53,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_list_consumer_groups_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.list_topics",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.ListTopics",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "ListTopics"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.ListTopicsRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.services.managed_kafka.pagers.ListTopicsAsyncPager",
        "shortName": "list_topics"
      },
      "description": "Sample for ListTopics",
      "file": "managedkafka_v1_generated_managed_kafka_list_topics_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_ListTopics_async",
      "segments": [
        {
          "end": 52,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 52,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 53,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_list_topics_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.list_topics",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.ListTopics",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "ListTopics"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.ListTopicsRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.services.managed_kafka.pagers.ListTopicsPager",
        "shortName": "list_topics"
      },
      "description": "Sample for ListTopics",
      "file": "managedkafka_v1_generated_managed_kafka_list_topics_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_ListTopics_sync",
      "segments": [
        {
          "end": 52,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 52,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 53,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_list_topics_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.update_cluster",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.UpdateCluster",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "UpdateCluster"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.UpdateClusterRequest"
          },
          {
            "name": "cluster",
            "type": "google.cloud.managedkafka_v1.types.Cluster"
          },
          {
            "name": "update_mask",
            "type": "google.protobuf.field_mask_pb2.FieldMask"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.api_core.operation_async.AsyncOperation",
        "shortName": "update_cluster"
      },
      "description": "Sample for UpdateCluster",
      "file": "managedkafka_v1_generated_managed_kafka_update_cluster_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_UpdateCluster_async",
      "segments": [
        {
          "end": 60,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 60,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 50,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 57,
          "start": 51,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 61,
          "start": 58,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_update_cluster_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.update_cluster",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.UpdateCluster",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "UpdateCluster"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.UpdateClusterRequest"
          },
          {
            "name": "cluster",
            "type": "google.cloud.managedkafka_v1.types.Cluster"
          },
          {
            "name": "update_mask",
            "type": "google.protobuf.field_mask_pb2.FieldMask"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.api_core.operation.Operation",
        "shortName": "update_cluster"
      },
      "description": "Sample for UpdateCluster",
      "file": "managedkafka_v1_generated_managed_kafka_update_cluster_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_UpdateCluster_sync",
      "segments": [
        {
          "end": 60,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 60,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 50,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 57,
          "start": 51,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 61,
          "start": 58,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_update_cluster_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.update_consumer_group",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.UpdateConsumerGroup",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "UpdateConsumerGroup"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.UpdateConsumerGroupRequest"
          },
          {
            "name": "consumer_group",
            "type": "google.cloud.managedkafka_v1.types.ConsumerGroup"
          },
          {
            "name": "update_mask",
            "type": "google.protobuf.field_mask_pb2.FieldMask"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.types.ConsumerGroup",
        "shortName": "update_consumer_group"
      },
      "description": "Sample for UpdateConsumerGroup",
      "file": "managedkafka_v1_generated_managed_kafka_update_consumer_group_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_UpdateConsumerGroup_async",
      "segments": [
        {
          "end": 50,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 50,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 44,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 47,
          "start": 45,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 51,
          "start": 48,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_update_consumer_group_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.update_consumer_group",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.UpdateConsumerGroup",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "UpdateConsumerGroup"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.UpdateConsumerGroupRequest"
          },
          {
            "name": "consumer_group",
            "type": "google.cloud.managedkafka_v1.types.ConsumerGroup"
          },
          {
            "name": "update_mask",
            "type": "google.protobuf.field_mask_pb2.FieldMask"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.types.ConsumerGroup",
        "shortName": "update_consumer_group"
      },
      "description": "Sample for UpdateConsumerGroup",
      "file": "managedkafka_v1_generated_managed_kafka_update_consumer_group_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_UpdateConsumerGroup_sync",
      "segments": [
        {
          "end": 50,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 50,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 44,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 47,
          "start": 45,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 51,
          "start": 48,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_update_consumer_group_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient",
          "shortName": "ManagedKafkaAsyncClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaAsyncClient.update_topic",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.UpdateTopic",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "UpdateTopic"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.UpdateTopicRequest"
          },
          {
            "name": "topic",
            "type": "google.cloud.managedkafka_v1.types.Topic"
          },
          {
            "name": "update_mask",
            "type": "google.protobuf.field_mask_pb2.FieldMask"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.types.Topic",
        "shortName": "update_topic"
      },
      "description": "Sample for UpdateTopic",
      "file": "managedkafka_v1_generated_managed_kafka_update_topic_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_UpdateTopic_async",
      "segments": [
        {
          "end": 55,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 55,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 49,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 52,
          "start": 50,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 56,
          "start": 53,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_update_topic_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient",
          "shortName": "ManagedKafkaClient"
        },
        "fullName": "google.cloud.managedkafka_v1.ManagedKafkaClient.update_topic",
        "method": {
          "fullName": "google.cloud.managedkafka.v1.ManagedKafka.UpdateTopic",
          "service": {
            "fullName": "google.cloud.managedkafka.v1.ManagedKafka",
            "shortName": "ManagedKafka"
          },
          "shortName": "UpdateTopic"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.managedkafka_v1.types.UpdateTopicRequest"
          },
          {
            "name": "topic",
            "type": "google.cloud.managedkafka_v1.types.Topic"
          },
          {
            "name": "update_mask",
            "type": "google.protobuf.field_mask_pb2.FieldMask"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.managedkafka_v1.types.Topic",
        "shortName": "update_topic"
      },
      "description": "Sample for UpdateTopic",
      "file": "managedkafka_v1_generated_managed_kafka_update_topic_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "managedkafka_v1_generated_ManagedKafka_UpdateTopic_sync",
      "segments": [
        {
          "end": 55,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 55,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 49,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 52,
          "start": 50,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 56,
          "start": 53,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "managedkafka_v1_generated_managed_kafka_update_topic_sync.py"
    }
  ]
}
