{
  "clientLibrary": {
    "apis": [
      {
        "id": "google.cloud.capacityplanner.v1beta",
        "version": "v1beta"
      }
    ],
    "language": "PYTHON",
    "name": "google-cloud-capacityplanner",
    "version": "0.1.0"
  },
  "snippets": [
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.CapacityPlanningServiceAsyncClient",
          "shortName": "CapacityPlanningServiceAsyncClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.CapacityPlanningServiceAsyncClient.get_capacity_plan",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.CapacityPlanningService.GetCapacityPlan",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.CapacityPlanningService",
            "shortName": "CapacityPlanningService"
          },
          "shortName": "GetCapacityPlan"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.GetCapacityPlanRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.capacityplanner_v1beta.types.CapacityPlan",
        "shortName": "get_capacity_plan"
      },
      "description": "Sample for GetCapacityPlan",
      "file": "capacityplanner_v1beta_generated_capacity_planning_service_get_capacity_plan_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_CapacityPlanningService_GetCapacityPlan_async",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_capacity_planning_service_get_capacity_plan_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.CapacityPlanningServiceClient",
          "shortName": "CapacityPlanningServiceClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.CapacityPlanningServiceClient.get_capacity_plan",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.CapacityPlanningService.GetCapacityPlan",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.CapacityPlanningService",
            "shortName": "CapacityPlanningService"
          },
          "shortName": "GetCapacityPlan"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.GetCapacityPlanRequest"
          },
          {
            "name": "name",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.capacityplanner_v1beta.types.CapacityPlan",
        "shortName": "get_capacity_plan"
      },
      "description": "Sample for GetCapacityPlan",
      "file": "capacityplanner_v1beta_generated_capacity_planning_service_get_capacity_plan_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_CapacityPlanningService_GetCapacityPlan_sync",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_capacity_planning_service_get_capacity_plan_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.CapacityPlanningServiceAsyncClient",
          "shortName": "CapacityPlanningServiceAsyncClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.CapacityPlanningServiceAsyncClient.query_capacity_plan_insights",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.CapacityPlanningService.QueryCapacityPlanInsights",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.CapacityPlanningService",
            "shortName": "CapacityPlanningService"
          },
          "shortName": "QueryCapacityPlanInsights"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.QueryCapacityPlanInsightsRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "capacity_plan_filters",
            "type": "google.cloud.capacityplanner_v1beta.types.CapacityPlanFilters"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.capacityplanner_v1beta.types.QueryCapacityPlanInsightsResponse",
        "shortName": "query_capacity_plan_insights"
      },
      "description": "Sample for QueryCapacityPlanInsights",
      "file": "capacityplanner_v1beta_generated_capacity_planning_service_query_capacity_plan_insights_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_CapacityPlanningService_QueryCapacityPlanInsights_async",
      "segments": [
        {
          "end": 58,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 58,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 52,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 55,
          "start": 53,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 59,
          "start": 56,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_capacity_planning_service_query_capacity_plan_insights_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.CapacityPlanningServiceClient",
          "shortName": "CapacityPlanningServiceClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.CapacityPlanningServiceClient.query_capacity_plan_insights",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.CapacityPlanningService.QueryCapacityPlanInsights",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.CapacityPlanningService",
            "shortName": "CapacityPlanningService"
          },
          "shortName": "QueryCapacityPlanInsights"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.QueryCapacityPlanInsightsRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "capacity_plan_filters",
            "type": "google.cloud.capacityplanner_v1beta.types.CapacityPlanFilters"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.capacityplanner_v1beta.types.QueryCapacityPlanInsightsResponse",
        "shortName": "query_capacity_plan_insights"
      },
      "description": "Sample for QueryCapacityPlanInsights",
      "file": "capacityplanner_v1beta_generated_capacity_planning_service_query_capacity_plan_insights_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_CapacityPlanningService_QueryCapacityPlanInsights_sync",
      "segments": [
        {
          "end": 58,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 58,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 52,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 55,
          "start": 53,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 59,
          "start": 56,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_capacity_planning_service_query_capacity_plan_insights_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.CapacityPlanningServiceAsyncClient",
          "shortName": "CapacityPlanningServiceAsyncClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.CapacityPlanningServiceAsyncClient.query_capacity_plans",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.CapacityPlanningService.QueryCapacityPlans",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.CapacityPlanningService",
            "shortName": "CapacityPlanningService"
          },
          "shortName": "QueryCapacityPlans"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.QueryCapacityPlansRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.capacityplanner_v1beta.services.capacity_planning_service.pagers.QueryCapacityPlansAsyncPager",
        "shortName": "query_capacity_plans"
      },
      "description": "Sample for QueryCapacityPlans",
      "file": "capacityplanner_v1beta_generated_capacity_planning_service_query_capacity_plans_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_CapacityPlanningService_QueryCapacityPlans_async",
      "segments": [
        {
          "end": 52,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 52,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 53,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_capacity_planning_service_query_capacity_plans_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.CapacityPlanningServiceClient",
          "shortName": "CapacityPlanningServiceClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.CapacityPlanningServiceClient.query_capacity_plans",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.CapacityPlanningService.QueryCapacityPlans",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.CapacityPlanningService",
            "shortName": "CapacityPlanningService"
          },
          "shortName": "QueryCapacityPlans"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.QueryCapacityPlansRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.capacityplanner_v1beta.services.capacity_planning_service.pagers.QueryCapacityPlansPager",
        "shortName": "query_capacity_plans"
      },
      "description": "Sample for QueryCapacityPlans",
      "file": "capacityplanner_v1beta_generated_capacity_planning_service_query_capacity_plans_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_CapacityPlanningService_QueryCapacityPlans_sync",
      "segments": [
        {
          "end": 52,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 52,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 53,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_capacity_planning_service_query_capacity_plans_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceAsyncClient",
          "shortName": "UsageServiceAsyncClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceAsyncClient.export_forecasts",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.UsageService.ExportForecasts",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.UsageService",
            "shortName": "UsageService"
          },
          "shortName": "ExportForecasts"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.ExportForecastsRequest"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.api_core.operation_async.AsyncOperation",
        "shortName": "export_forecasts"
      },
      "description": "Sample for ExportForecasts",
      "file": "capacityplanner_v1beta_generated_usage_service_export_forecasts_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_UsageService_ExportForecasts_async",
      "segments": [
        {
          "end": 61,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 61,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 51,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 58,
          "start": 52,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 62,
          "start": 59,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_usage_service_export_forecasts_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceClient",
          "shortName": "UsageServiceClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceClient.export_forecasts",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.UsageService.ExportForecasts",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.UsageService",
            "shortName": "UsageService"
          },
          "shortName": "ExportForecasts"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.ExportForecastsRequest"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.api_core.operation.Operation",
        "shortName": "export_forecasts"
      },
      "description": "Sample for ExportForecasts",
      "file": "capacityplanner_v1beta_generated_usage_service_export_forecasts_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_UsageService_ExportForecasts_sync",
      "segments": [
        {
          "end": 61,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 61,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 51,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 58,
          "start": 52,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 62,
          "start": 59,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_usage_service_export_forecasts_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceAsyncClient",
          "shortName": "UsageServiceAsyncClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceAsyncClient.export_reservations_usage",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.UsageService.ExportReservationsUsage",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.UsageService",
            "shortName": "UsageService"
          },
          "shortName": "ExportReservationsUsage"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.ExportReservationsUsageRequest"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.api_core.operation_async.AsyncOperation",
        "shortName": "export_reservations_usage"
      },
      "description": "Sample for ExportReservationsUsage",
      "file": "capacityplanner_v1beta_generated_usage_service_export_reservations_usage_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_UsageService_ExportReservationsUsage_async",
      "segments": [
        {
          "end": 63,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 63,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 53,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 60,
          "start": 54,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 64,
          "start": 61,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_usage_service_export_reservations_usage_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceClient",
          "shortName": "UsageServiceClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceClient.export_reservations_usage",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.UsageService.ExportReservationsUsage",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.UsageService",
            "shortName": "UsageService"
          },
          "shortName": "ExportReservationsUsage"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.ExportReservationsUsageRequest"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.api_core.operation.Operation",
        "shortName": "export_reservations_usage"
      },
      "description": "Sample for ExportReservationsUsage",
      "file": "capacityplanner_v1beta_generated_usage_service_export_reservations_usage_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_UsageService_ExportReservationsUsage_sync",
      "segments": [
        {
          "end": 63,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 63,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 53,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 60,
          "start": 54,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 64,
          "start": 61,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_usage_service_export_reservations_usage_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceAsyncClient",
          "shortName": "UsageServiceAsyncClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceAsyncClient.export_usage_histories",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.UsageService.ExportUsageHistories",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.UsageService",
            "shortName": "UsageService"
          },
          "shortName": "ExportUsageHistories"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.ExportUsageHistoriesRequest"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.api_core.operation_async.AsyncOperation",
        "shortName": "export_usage_histories"
      },
      "description": "Sample for ExportUsageHistories",
      "file": "capacityplanner_v1beta_generated_usage_service_export_usage_histories_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_UsageService_ExportUsageHistories_async",
      "segments": [
        {
          "end": 61,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 61,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 51,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 58,
          "start": 52,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 62,
          "start": 59,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_usage_service_export_usage_histories_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceClient",
          "shortName": "UsageServiceClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceClient.export_usage_histories",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.UsageService.ExportUsageHistories",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.UsageService",
            "shortName": "UsageService"
          },
          "shortName": "ExportUsageHistories"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.ExportUsageHistoriesRequest"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.api_core.operation.Operation",
        "shortName": "export_usage_histories"
      },
      "description": "Sample for ExportUsageHistories",
      "file": "capacityplanner_v1beta_generated_usage_service_export_usage_histories_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_UsageService_ExportUsageHistories_sync",
      "segments": [
        {
          "end": 61,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 61,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 51,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 58,
          "start": 52,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 62,
          "start": 59,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_usage_service_export_usage_histories_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceAsyncClient",
          "shortName": "UsageServiceAsyncClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceAsyncClient.query_forecasts",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.UsageService.QueryForecasts",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.UsageService",
            "shortName": "UsageService"
          },
          "shortName": "QueryForecasts"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.QueryForecastsRequest"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.capacityplanner_v1beta.types.QueryForecastsResponse",
        "shortName": "query_forecasts"
      },
      "description": "Sample for QueryForecasts",
      "file": "capacityplanner_v1beta_generated_usage_service_query_forecasts_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_UsageService_QueryForecasts_async",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_usage_service_query_forecasts_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceClient",
          "shortName": "UsageServiceClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceClient.query_forecasts",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.UsageService.QueryForecasts",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.UsageService",
            "shortName": "UsageService"
          },
          "shortName": "QueryForecasts"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.QueryForecastsRequest"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.capacityplanner_v1beta.types.QueryForecastsResponse",
        "shortName": "query_forecasts"
      },
      "description": "Sample for QueryForecasts",
      "file": "capacityplanner_v1beta_generated_usage_service_query_forecasts_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_UsageService_QueryForecasts_sync",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_usage_service_query_forecasts_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceAsyncClient",
          "shortName": "UsageServiceAsyncClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceAsyncClient.query_reservations",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.UsageService.QueryReservations",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.UsageService",
            "shortName": "UsageService"
          },
          "shortName": "QueryReservations"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.QueryReservationsRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.capacityplanner_v1beta.types.QueryReservationsResponse",
        "shortName": "query_reservations"
      },
      "description": "Sample for QueryReservations",
      "file": "capacityplanner_v1beta_generated_usage_service_query_reservations_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_UsageService_QueryReservations_async",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_usage_service_query_reservations_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceClient",
          "shortName": "UsageServiceClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceClient.query_reservations",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.UsageService.QueryReservations",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.UsageService",
            "shortName": "UsageService"
          },
          "shortName": "QueryReservations"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.QueryReservationsRequest"
          },
          {
            "name": "parent",
            "type": "str"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.capacityplanner_v1beta.types.QueryReservationsResponse",
        "shortName": "query_reservations"
      },
      "description": "Sample for QueryReservations",
      "file": "capacityplanner_v1beta_generated_usage_service_query_reservations_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_UsageService_QueryReservations_sync",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_usage_service_query_reservations_sync.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "async": true,
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceAsyncClient",
          "shortName": "UsageServiceAsyncClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceAsyncClient.query_usage_histories",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.UsageService.QueryUsageHistories",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.UsageService",
            "shortName": "UsageService"
          },
          "shortName": "QueryUsageHistories"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.QueryUsageHistoriesRequest"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.capacityplanner_v1beta.types.QueryUsageHistoriesResponse",
        "shortName": "query_usage_histories"
      },
      "description": "Sample for QueryUsageHistories",
      "file": "capacityplanner_v1beta_generated_usage_service_query_usage_histories_async.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_UsageService_QueryUsageHistories_async",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_usage_service_query_usage_histories_async.py"
    },
    {
      "canonical": true,
      "clientMethod": {
        "client": {
          "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceClient",
          "shortName": "UsageServiceClient"
        },
        "fullName": "google.cloud.capacityplanner_v1beta.UsageServiceClient.query_usage_histories",
        "method": {
          "fullName": "google.cloud.capacityplanner.v1beta.UsageService.QueryUsageHistories",
          "service": {
            "fullName": "google.cloud.capacityplanner.v1beta.UsageService",
            "shortName": "UsageService"
          },
          "shortName": "QueryUsageHistories"
        },
        "parameters": [
          {
            "name": "request",
            "type": "google.cloud.capacityplanner_v1beta.types.QueryUsageHistoriesRequest"
          },
          {
            "name": "retry",
            "type": "google.api_core.retry.Retry"
          },
          {
            "name": "timeout",
            "type": "float"
          },
          {
            "name": "metadata",
            "type": "Sequence[Tuple[str, Union[str, bytes]]]"
          }
        ],
        "resultType": "google.cloud.capacityplanner_v1beta.types.QueryUsageHistoriesResponse",
        "shortName": "query_usage_histories"
      },
      "description": "Sample for QueryUsageHistories",
      "file": "capacityplanner_v1beta_generated_usage_service_query_usage_histories_sync.py",
      "language": "PYTHON",
      "origin": "API_DEFINITION",
      "regionTag": "capacityplanner_v1beta_generated_UsageService_QueryUsageHistories_sync",
      "segments": [
        {
          "end": 51,
          "start": 27,
          "type": "FULL"
        },
        {
          "end": 51,
          "start": 27,
          "type": "SHORT"
        },
        {
          "end": 40,
          "start": 38,
          "type": "CLIENT_INITIALIZATION"
        },
        {
          "end": 45,
          "start": 41,
          "type": "REQUEST_INITIALIZATION"
        },
        {
          "end": 48,
          "start": 46,
          "type": "REQUEST_EXECUTION"
        },
        {
          "end": 52,
          "start": 49,
          "type": "RESPONSE_HANDLING"
        }
      ],
      "title": "capacityplanner_v1beta_generated_usage_service_query_usage_histories_sync.py"
    }
  ]
}
