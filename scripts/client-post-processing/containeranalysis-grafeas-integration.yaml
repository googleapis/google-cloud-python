# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
description: Customizations related to the integration with grafeas
url: https://github.com/googleapis/gapic-generator-python/issues/1830
replacements:
  - paths: [
      packages/google-cloud-containeranalysis/setup.py
    ]
    before: |
      dependencies = \[
          "google-api-core\[grpc\] >= 1.34.1, <3.0.0,!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,!=2.5.*,!=2.6.*,!=2.7.*,!=2.8.*,!=2.9.*,!=2.10.*",
          # Exclude incompatible versions of `google-auth`
          # See https://github.com/googleapis/google-cloud-python/issues/12364
          "google-auth >= 2.14.1, <3.0.0,!=2.24.0,!=2.25.0",
          "proto-plus >= 1.22.3, <2.0.0",
    after: |
      dependencies = [
          "google-api-core[grpc] >= 1.34.1, <3.0.0,!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,!=2.5.*,!=2.6.*,!=2.7.*,!=2.8.*,!=2.9.*,!=2.10.*",
          # Exclude incompatible versions of `google-auth`
          # See https://github.com/googleapis/google-cloud-python/issues/12364
          "google-auth >= 2.14.1, <3.0.0,!=2.24.0,!=2.25.0",
          "grafeas >=1.4.1, <2.0",
          "proto-plus >= 1.22.3, <2.0.0",
    count: 1
  - paths: [
      packages/google-cloud-containeranalysis/testing/constraints-3.7.txt
    ]
    before: |
      google-api-core==1.34.1
      google-auth==2.14.1
      proto-plus==1.22.3
    after: |
      google-api-core==1.34.1
      google-auth==2.14.1
      grafeas==1.4.1
      proto-plus==1.22.3
    count: 1
  - paths: [
      packages/google-cloud-containeranalysis/google/cloud/devtools/containeranalysis_v1/services/container_analysis/client.py,
      packages/google-cloud-containeranalysis/google/cloud/devtools/containeranalysis_v1/services/container_analysis/async_client.py,
    ]
    before: |
      from google.iam.v1 import policy_pb2  # type: ignore\n
    after: |
      from google.iam.v1 import policy_pb2  # type: ignore
      from grafeas import grafeas_v1
      from grafeas.grafeas_v1.services.grafeas import transports\n
    count: 2
  - paths: [
      packages/google-cloud-containeranalysis/google/cloud/devtools/containeranalysis_v1/services/container_analysis/client.py,
    ]
    before: |
      \,\n                        "credentialsType": None,
      \                    \},
      \                \)
      \
      \    def set_iam_policy\(
    after: |
      ,\n                        "credentialsType": None,
                          },
                      )\n
          def get_grafeas_client(self) -> grafeas_v1.GrafeasClient:
              grafeas_transport = grafeas_v1.services.grafeas.transports.GrafeasGrpcTransport(
                  credentials=self.transport._credentials,
                  # Set ``credentials_file`` to ``None`` here as
                  # transport._credentials contains the credentials
                  # which are saved
                  credentials_file=None,
                  host=self.transport._host,
                  scopes=self.transport.AUTH_SCOPES,
              )
              return grafeas_v1.GrafeasClient(transport=grafeas_transport)\n
          def set_iam_policy(
    count: 1
  - paths: [
      packages/google-cloud-containeranalysis/google/cloud/devtools/containeranalysis_v1/services/container_analysis/async_client.py,
    ]
    before: |
      \,\n                    "credentialsType": None,
      \                \},
      \            \)
      \
      \    async def set_iam_policy\(
    after: |
      ,\n                    "credentialsType": None,
                      },
                  )\n
          def get_grafeas_client(self) -> grafeas_v1.GrafeasClient:
              grafeas_transport = grafeas_v1.services.grafeas.transports.GrafeasGrpcTransport(
                  credentials=self.transport._credentials,
                  # Set ``credentials_file`` to ``None`` here as
                  # transport._credentials contains the credentials
                  # which are saved
                  credentials_file=None,
                  host=self.transport._host,
                  scopes=self.transport.AUTH_SCOPES,
              )
              return grafeas_v1.GrafeasClient(transport=grafeas_transport)\n
          async def set_iam_policy(
    count: 1
  - paths: [
    packages/google-cloud-containeranalysis/google/cloud/devtools/containeranalysis_v1/types/containeranalysis.py
    ]
    before: from grafeas.v1 import severity_pb2  # type: ignore
    after: import grafeas.grafeas_v1  # type: ignore
    count: 1
  - paths: [
      packages/google-cloud-containeranalysis/tests/unit/gapic/containeranalysis_v1/test_container_analysis.py
    ]
    before: |
      \)
      \        create_channel.assert_called_with\(
      \            "containeranalysis.googleapis.com:443",
      \            credentials=file_creds,
      \            credentials_file=None,
      \            quota_project_id=None,
      \            default_scopes=\("https://www.googleapis.com/auth/cloud-platform",\),
      \            scopes=None,
      \            default_host="containeranalysis.googleapis.com",
      \            ssl_credentials=None,
      \            options=\[
      \                \("grpc.max_send_message_length", -1\),
      \                \("grpc.max_receive_message_length", -1\),
      \            \],
      \        \)\n\n
    after: |
      )
              create_channel.assert_called_with(
                  "containeranalysis.googleapis.com:443",
                  credentials=file_creds,
                  credentials_file=None,
                  quota_project_id=None,
                  default_scopes=("https://www.googleapis.com/auth/cloud-platform",),
                  scopes=None,
                  default_host="containeranalysis.googleapis.com",
                  ssl_credentials=None,
                  options=[
                      ("grpc.max_send_message_length", -1),
                      ("grpc.max_receive_message_length", -1),
                  ],
              )

              # Also check client.get_grafeas_client() to make sure that the file credentials are used
              assert file_creds == client.get_grafeas_client().transport._credentials\n\n
    count: 1
  - paths: [
      packages/google-cloud-containeranalysis/google/cloud/devtools/containeranalysis_v1/types/containeranalysis.py
    ]
    before: grafeas.v1.severity_pb2.Severity
    after: grafeas.v1.grafeas.grafeas_v1.Severity
    count: 1
  - paths: [
      packages/google-cloud-containeranalysis/google/cloud/devtools/containeranalysis_v1/types/containeranalysis.py
    ]
    before: severity_pb2
    after: grafeas.grafeas_v1
    count: 2
